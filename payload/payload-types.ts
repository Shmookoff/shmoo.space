/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    technologies: Technology;
    technologyIcons: TechnologyIcon;
    projects: Project;
    projectLeadImages: ProjectLeadImage;
    pages: Page;
    socialNetworkIcons: SocialNetworkIcon;
    media: Media;
  };
  globals: {
    siteIdentity: SiteIdentity;
    siteSettings: SiteSetting;
  };
}
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Technology {
  id: string;
  title: string;
  slug: string;
  icon: string | TechnologyIcon;
  updatedAt: string;
  createdAt: string;
}
export interface TechnologyIcon {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Project {
  id: string;
  title: string;
  slug: string;
  excerpt: string;
  links?: {
    type: 'git' | 'homepage' | 'other';
    value: string;
    id?: string;
  }[];
  description: {
    [k: string]: unknown;
  }[];
  technologies: string[] | Technology[];
  gallery?: {
    image: string | ProjectLeadImage;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface ProjectLeadImage {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Page {
  id: string;
  title: string;
  location: string;
  content: (AboutBlock | ProjectsBlock | TechnologiesBlock)[];
  updatedAt: string;
  createdAt: string;
}
export interface AboutBlock {
  generalInfo: {
    avatar: string | Media;
    content: (
      | Heading1Block
      | Heading2Block
      | Heading3Block
      | Heading4Block
      | Heading5Block
      | Heading6Block
      | BlockquoteBlock
      | LeadBlock
      | LargeBlock
      | SmallBlock
      | MutedBlock
      | ParagraphBlock
    )[];
  };
  content: {
    [k: string]: unknown;
  }[];
  id?: string;
  blockName?: string;
  blockType: 'about';
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Heading1Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_1';
}
export interface Heading2Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_2';
}
export interface Heading3Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_3';
}
export interface Heading4Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_4';
}
export interface Heading5Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_5';
}
export interface Heading6Block {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'heading_6';
}
export interface BlockquoteBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'blockquote';
}
export interface LeadBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'lead';
}
export interface LargeBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'large';
}
export interface SmallBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'small';
}
export interface MutedBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'muted';
}
export interface ParagraphBlock {
  text: string;
  id?: string;
  blockName?: string;
  blockType: 'paragraph';
}
export interface ProjectsBlock {
  id?: string;
  blockName?: string;
  blockType: 'projects';
}
export interface TechnologiesBlock {
  id?: string;
  blockName?: string;
  blockType: 'technologies';
}
export interface SocialNetworkIcon {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface SiteIdentity {
  id: string;
  title: string;
  subtitle: string;
  navigationMenuItems?: {
    title: string;
    description: string;
    page: string | Page;
    id?: string;
  }[];
  socialNetworkItems?: {
    title: string;
    url: string;
    icon: string | SocialNetworkIcon;
    id?: string;
  }[];
  updatedAt?: string;
  createdAt?: string;
}
export interface SiteSetting {
  id: string;
  pageMapping: {
    projects: {
      parent: string | Page;
      singlePage: (
        | {
            title?: string;
            id?: string;
            blockName?: string;
            blockType: 'singleProject';
          }
        | {
            title?: string;
            id?: string;
            blockName?: string;
            blockType: 'singleTechnology';
          }
      )[];
    };
    technologies: {
      parent: string | Page;
      singlePage: (
        | {
            title?: string;
            id?: string;
            blockName?: string;
            blockType: 'singleProject';
          }
        | {
            title?: string;
            id?: string;
            blockName?: string;
            blockType: 'singleTechnology';
          }
      )[];
    };
  };
  updatedAt?: string;
  createdAt?: string;
}
